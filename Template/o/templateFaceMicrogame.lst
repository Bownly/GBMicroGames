                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12539 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module templateFaceMicrogame
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _templateFaceMicrogameMain
                                     12 	.globl _playSong
                                     13 	.globl _fadein
                                     14 	.globl _getRandUint8
                                     15 	.globl _init_bkg
                                     16 	.globl _set_sprite_data
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _joypad
                                     20 ;--------------------------------------------------------
                                     21 ; special function registers
                                     22 ;--------------------------------------------------------
                                     23 ;--------------------------------------------------------
                                     24 ; ram data
                                     25 ;--------------------------------------------------------
                                     26 	.area _DATA
      000000                         27 _facesGrid:
      000000                         28 	.ds 20
      000014                         29 _sadCount:
      000014                         30 	.ds 1
                                     31 ;--------------------------------------------------------
                                     32 ; ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area _INITIALIZED
                                     35 ;--------------------------------------------------------
                                     36 ; absolute external ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DABS (ABS)
                                     39 ;--------------------------------------------------------
                                     40 ; global & static initialisations
                                     41 ;--------------------------------------------------------
                                     42 	.area _HOME
                                     43 	.area _GSINIT
                                     44 	.area _GSFINAL
                                     45 	.area _GSINIT
                                     46 ;--------------------------------------------------------
                                     47 ; Home
                                     48 ;--------------------------------------------------------
                                     49 	.area _HOME
                                     50 	.area _HOME
                                     51 ;--------------------------------------------------------
                                     52 ; code
                                     53 ;--------------------------------------------------------
                                     54 	.area _CODE_1
                                     55 ;Template/states/templateFaceMicrogame.c:64: void templateFaceMicrogameMain()
                                     56 ;	---------------------------------
                                     57 ; Function templateFaceMicrogameMain
                                     58 ; ---------------------------------
      000000                         59 _templateFaceMicrogameMain::
                                     60 ;Template/states/templateFaceMicrogame.c:66: curJoypad = joypad();
      000000 CDr00r00                61 	call	_joypad
      000003 21r00r00                62 	ld	hl, #_curJoypad
      000006 73                      63 	ld	(hl), e
                                     64 ;Template/states/templateFaceMicrogame.c:68: switch (substate)
      000007 FAr00r00                65 	ld	a, (#_substate)
      00000A B7                      66 	or	a, a
      00000B 28 08                   67 	jr	Z, 00101$
      00000D FAr00r00                68 	ld	a, (#_substate)
      000010 3D                      69 	dec	a
      000011 28 07                   70 	jr	Z, 00102$
      000013 18 0A                   71 	jr	00103$
                                     72 ;Template/states/templateFaceMicrogame.c:70: case SUB_INIT:
      000015                         73 00101$:
                                     74 ;Template/states/templateFaceMicrogame.c:71: phaseFaceInit();
      000015 CDr30r00                75 	call	_phaseFaceInit
                                     76 ;Template/states/templateFaceMicrogame.c:72: break;
      000018 18 0F                   77 	jr	00104$
                                     78 ;Template/states/templateFaceMicrogame.c:73: case SUB_LOOP:
      00001A                         79 00102$:
                                     80 ;Template/states/templateFaceMicrogame.c:74: phaseFaceLoop();
      00001A CDr4Cr01                81 	call	_phaseFaceLoop
                                     82 ;Template/states/templateFaceMicrogame.c:75: break;
      00001D 18 0A                   83 	jr	00104$
                                     84 ;Template/states/templateFaceMicrogame.c:76: default:  // Abort to title in the event of unexpected state
      00001F                         85 00103$:
                                     86 ;Template/states/templateFaceMicrogame.c:77: gamestate = STATE_TITLE;
      00001F 21r00r00                87 	ld	hl, #_gamestate
      000022 36 00                   88 	ld	(hl), #0x00
                                     89 ;Template/states/templateFaceMicrogame.c:78: substate = SUB_INIT;
      000024 21r00r00                90 	ld	hl, #_substate
      000027 36 00                   91 	ld	(hl), #0x00
                                     92 ;Template/states/templateFaceMicrogame.c:80: }
      000029                         93 00104$:
                                     94 ;Template/states/templateFaceMicrogame.c:81: prevJoypad = curJoypad;
      000029 FAr00r00                95 	ld	a, (#_curJoypad)
      00002C EAr00r00                96 	ld	(#_prevJoypad),a
                                     97 ;Template/states/templateFaceMicrogame.c:82: }
      00002F C9                      98 	ret
                                     99 ;Template/states/templateFaceMicrogame.c:86: static void phaseFaceInit()
                                    100 ;	---------------------------------
                                    101 ; Function phaseFaceInit
                                    102 ; ---------------------------------
      000030                        103 _phaseFaceInit:
                                    104 ;Template/states/templateFaceMicrogame.c:89: init_bkg(0xFFU);
      000030 3E FF                  105 	ld	a, #0xff
      000032 F5                     106 	push	af
      000033 33                     107 	inc	sp
      000034 CDr00r00               108 	call	_init_bkg
      000037 33                     109 	inc	sp
                                    110 ;Template/states/templateFaceMicrogame.c:90: animTick = 0U;
      000038 21r00r00               111 	ld	hl, #_animTick
      00003B 36 00                  112 	ld	(hl), #0x00
                                    113 ;Template/states/templateFaceMicrogame.c:91: m = 0U;  // Used as the X index for the cursor, uses faces as the unit of measurement
      00003D 21r00r00               114 	ld	hl, #_m
      000040 36 00                  115 	ld	(hl), #0x00
                                    116 ;Template/states/templateFaceMicrogame.c:92: n = 0U;  // Used as the Y index for the cursor, uses faces as the unit of measurement
      000042 21r00r00               117 	ld	hl, #_n
      000045 36 00                  118 	ld	(hl), #0x00
                                    119 ;Template/states/templateFaceMicrogame.c:95: sadCount = mgDifficulty + 2U;  // Range of 2, 3 or 4
      000047 FAr00r00               120 	ld	a, (#_mgDifficulty)
      00004A C6 02                  121 	add	a, #0x02
      00004C EAr14r00               122 	ld	(#_sadCount),a
                                    123 ;Template/states/templateFaceMicrogame.c:102: set_bkg_data(BKGTILE_FACES, 8U, templateFaceTiles);
      00004F 11r00r00               124 	ld	de, #_templateFaceTiles
      000052 D5                     125 	push	de
      000053 21 40 08               126 	ld	hl, #0x840
      000056 E5                     127 	push	hl
      000057 CDr00r00               128 	call	_set_bkg_data
      00005A E8 04                  129 	add	sp, #4
                                    130 ;Template/states/templateFaceMicrogame.c:103: set_sprite_data(SPRTILE_CURSOR, 3U, templateCursorTiles);
      00005C 11r00r00               131 	ld	de, #_templateCursorTiles
      00005F D5                     132 	push	de
      000060 21 00 03               133 	ld	hl, #0x300
      000063 E5                     134 	push	hl
      000064 CDr00r00               135 	call	_set_sprite_data
      000067 E8 04                  136 	add	sp, #4
                                    137 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      000069 21r02r00               138 	ld	hl, #(_shadow_OAM + 2)
      00006C 36 00                  139 	ld	(hl), #0x00
                                    140 ;Template/states/templateFaceMicrogame.c:107: animateCursor();
      00006E CDr85r02               141 	call	_animateCursor
                                    142 ;Template/states/templateFaceMicrogame.c:108: updateCursorLocation();
      000071 CDrA4r02               143 	call	_updateCursorLocation
                                    144 ;Template/states/templateFaceMicrogame.c:111: for (i = 0U; i != 5U; ++i)
      000074 21r00r00               145 	ld	hl, #_i
      000077 36 00                  146 	ld	(hl), #0x00
      000079                        147 00111$:
                                    148 ;Template/states/templateFaceMicrogame.c:113: for (j = 0U; j != 4U; ++j)
      000079 21r00r00               149 	ld	hl, #_j
      00007C 36 00                  150 	ld	(hl), #0x00
      00007E                        151 00109$:
                                    152 ;Template/states/templateFaceMicrogame.c:115: facesGrid[j][i] = HAPPY;
      00007E 21r00r00               153 	ld	hl, #_j
      000081 4E                     154 	ld	c, (hl)
      000082 06 00                  155 	ld	b, #0x00
      000084 69                     156 	ld	l, c
      000085 60                     157 	ld	h, b
      000086 29                     158 	add	hl, hl
      000087 29                     159 	add	hl, hl
      000088 09                     160 	add	hl, bc
      000089 01r00r00               161 	ld	bc,#_facesGrid
      00008C 09                     162 	add	hl,bc
      00008D 4D                     163 	ld	c, l
      00008E 44                     164 	ld	b, h
      00008F 21r00r00               165 	ld	hl, #_i
      000092 6E                     166 	ld	l, (hl)
                                    167 ;	spillPairReg hl
                                    168 ;	spillPairReg hl
      000093 26 00                  169 	ld	h, #0x00
      000095 09                     170 	add	hl, bc
      000096 36 00                  171 	ld	(hl), #0x00
                                    172 ;Template/states/templateFaceMicrogame.c:116: set_bkg_tiles(facesXAnchor + (i * 3U), facesYAnchor + (j * 3U), 2U, 2U, templateFace1Map);
      000098 FAr00r00               173 	ld	a, (#_j)
      00009B 4F                     174 	ld	c, a
      00009C 87                     175 	add	a, a
      00009D 81                     176 	add	a, c
      00009E C6 03                  177 	add	a, #0x03
      0000A0 47                     178 	ld	b, a
      0000A1 21r00r00               179 	ld	hl, #_i
      0000A4 7E                     180 	ld	a, (hl)
      0000A5 5F                     181 	ld	e, a
      0000A6 87                     182 	add	a, a
      0000A7 83                     183 	add	a, e
      0000A8 C6 03                  184 	add	a, #0x03
      0000AA 11r00r00               185 	ld	de, #_templateFace1Map
      0000AD D5                     186 	push	de
      0000AE 26 02                  187 	ld	h, #0x02
                                    188 ;	spillPairReg hl
                                    189 ;	spillPairReg hl
      0000B0 E5                     190 	push	hl
      0000B1 33                     191 	inc	sp
      0000B2 26 02                  192 	ld	h, #0x02
                                    193 ;	spillPairReg hl
                                    194 ;	spillPairReg hl
      0000B4 68                     195 	ld	l, b
      0000B5 E5                     196 	push	hl
      0000B6 F5                     197 	push	af
      0000B7 33                     198 	inc	sp
      0000B8 CDr00r00               199 	call	_set_bkg_tiles
      0000BB E8 06                  200 	add	sp, #6
                                    201 ;Template/states/templateFaceMicrogame.c:113: for (j = 0U; j != 4U; ++j)
      0000BD 21r00r00               202 	ld	hl, #_j
      0000C0 34                     203 	inc	(hl)
      0000C1 7E                     204 	ld	a, (hl)
      0000C2 D6 04                  205 	sub	a, #0x04
      0000C4 20 B8                  206 	jr	NZ, 00109$
                                    207 ;Template/states/templateFaceMicrogame.c:111: for (i = 0U; i != 5U; ++i)
      0000C6 21r00r00               208 	ld	hl, #_i
      0000C9 34                     209 	inc	(hl)
      0000CA 7E                     210 	ld	a, (hl)
      0000CB D6 05                  211 	sub	a, #0x05
      0000CD 20 AA                  212 	jr	NZ, 00111$
                                    213 ;Template/states/templateFaceMicrogame.c:121: k = 0U;
      0000CF 21r00r00               214 	ld	hl, #_k
      0000D2 36 00                  215 	ld	(hl), #0x00
                                    216 ;Template/states/templateFaceMicrogame.c:122: while (k != sadCount)
      0000D4                        217 00105$:
      0000D4 FAr00r00               218 	ld	a, (#_k)
      0000D7 21r14r00               219 	ld	hl, #_sadCount
      0000DA 96                     220 	sub	a, (hl)
      0000DB 28 5E                  221 	jr	Z, 00107$
                                    222 ;Template/states/templateFaceMicrogame.c:124: i = getRandUint8(5U);  // Number of columns
      0000DD 3E 05                  223 	ld	a, #0x05
      0000DF F5                     224 	push	af
      0000E0 33                     225 	inc	sp
      0000E1 CDr00r00               226 	call	_getRandUint8
      0000E4 33                     227 	inc	sp
      0000E5 21r00r00               228 	ld	hl, #_i
      0000E8 73                     229 	ld	(hl), e
                                    230 ;Template/states/templateFaceMicrogame.c:125: j = getRandUint8(4U);  // Number of rows
      0000E9 3E 04                  231 	ld	a, #0x04
      0000EB F5                     232 	push	af
      0000EC 33                     233 	inc	sp
      0000ED CDr00r00               234 	call	_getRandUint8
      0000F0 33                     235 	inc	sp
      0000F1 21r00r00               236 	ld	hl, #_j
      0000F4 73                     237 	ld	(hl), e
                                    238 ;Template/states/templateFaceMicrogame.c:128: if (facesGrid[j][i] == HAPPY)
      0000F5 4E                     239 	ld	c, (hl)
      0000F6 06 00                  240 	ld	b, #0x00
      0000F8 69                     241 	ld	l, c
      0000F9 60                     242 	ld	h, b
      0000FA 29                     243 	add	hl, hl
      0000FB 29                     244 	add	hl, hl
      0000FC 09                     245 	add	hl, bc
      0000FD 01r00r00               246 	ld	bc,#_facesGrid
      000100 09                     247 	add	hl,bc
      000101 4D                     248 	ld	c, l
      000102 44                     249 	ld	b, h
                                    250 ;Template/states/templateFaceMicrogame.c:115: facesGrid[j][i] = HAPPY;
      000103 21r00r00               251 	ld	hl, #_i
      000106 6E                     252 	ld	l, (hl)
                                    253 ;	spillPairReg hl
                                    254 ;	spillPairReg hl
                                    255 ;Template/states/templateFaceMicrogame.c:128: if (facesGrid[j][i] == HAPPY)
      000107 26 00                  256 	ld	h, #0x00
      000109 09                     257 	add	hl, bc
      00010A 7E                     258 	ld	a, (hl)
      00010B B7                     259 	or	a, a
      00010C 20 C6                  260 	jr	NZ, 00105$
                                    261 ;Template/states/templateFaceMicrogame.c:130: facesGrid[j][i] = SAD;
      00010E 36 01                  262 	ld	(hl), #0x01
                                    263 ;Template/states/templateFaceMicrogame.c:131: set_bkg_tiles(facesXAnchor + (i * 3U), facesYAnchor + (j * 3U), 2U, 2U, templateFace2Map);
      000110 FAr00r00               264 	ld	a, (#_j)
      000113 4F                     265 	ld	c, a
      000114 87                     266 	add	a, a
      000115 81                     267 	add	a, c
      000116 C6 03                  268 	add	a, #0x03
      000118 47                     269 	ld	b, a
      000119 21r00r00               270 	ld	hl, #_i
      00011C 7E                     271 	ld	a, (hl)
      00011D 5F                     272 	ld	e, a
      00011E 87                     273 	add	a, a
      00011F 83                     274 	add	a, e
      000120 C6 03                  275 	add	a, #0x03
      000122 11r00r00               276 	ld	de, #_templateFace2Map
      000125 D5                     277 	push	de
      000126 26 02                  278 	ld	h, #0x02
                                    279 ;	spillPairReg hl
                                    280 ;	spillPairReg hl
      000128 E5                     281 	push	hl
      000129 33                     282 	inc	sp
      00012A 26 02                  283 	ld	h, #0x02
                                    284 ;	spillPairReg hl
                                    285 ;	spillPairReg hl
      00012C 68                     286 	ld	l, b
      00012D E5                     287 	push	hl
      00012E F5                     288 	push	af
      00012F 33                     289 	inc	sp
      000130 CDr00r00               290 	call	_set_bkg_tiles
      000133 E8 06                  291 	add	sp, #6
                                    292 ;Template/states/templateFaceMicrogame.c:132: ++k;  // Increase the count to prevent an infinite loop
      000135 21r00r00               293 	ld	hl, #_k
      000138 34                     294 	inc	(hl)
      000139 18 99                  295 	jr	00105$
      00013B                        296 00107$:
                                    297 ;Template/states/templateFaceMicrogame.c:137: playSong(&templateTwilightDriveSong);
      00013B 11r00r00               298 	ld	de, #_templateTwilightDriveSong
      00013E D5                     299 	push	de
      00013F CDr00r00               300 	call	_playSong
      000142 E1                     301 	pop	hl
                                    302 ;Template/states/templateFaceMicrogame.c:139: fadein();
      000143 CDr00r00               303 	call	_fadein
                                    304 ;Template/states/templateFaceMicrogame.c:140: substate = SUB_LOOP;
      000146 21r00r00               305 	ld	hl, #_substate
      000149 36 01                  306 	ld	(hl), #0x01
                                    307 ;Template/states/templateFaceMicrogame.c:141: }
      00014B C9                     308 	ret
                                    309 ;Template/states/templateFaceMicrogame.c:143: static void phaseFaceLoop()
                                    310 ;	---------------------------------
                                    311 ; Function phaseFaceLoop
                                    312 ; ---------------------------------
      00014C                        313 _phaseFaceLoop:
                                    314 ;Template/states/templateFaceMicrogame.c:145: ++animTick;
      00014C 21r00r00               315 	ld	hl, #_animTick
      00014F 34                     316 	inc	(hl)
                                    317 ;Template/states/templateFaceMicrogame.c:147: if (mgStatus == PLAYING)
      000150 FAr00r00               318 	ld	a, (#_mgStatus)
      000153 3D                     319 	dec	a
      000154 C0                     320 	ret	NZ
                                    321 ;Template/states/templateFaceMicrogame.c:149: inputsFace();
      000155 CDr5Br01               322 	call	_inputsFace
                                    323 ;Template/states/templateFaceMicrogame.c:150: animateCursor();  
                                    324 ;Template/states/templateFaceMicrogame.c:152: }
      000158 C3r85r02               325 	jp	_animateCursor
                                    326 ;Template/states/templateFaceMicrogame.c:155: static void inputsFace()
                                    327 ;	---------------------------------
                                    328 ; Function inputsFace
                                    329 ; ---------------------------------
      00015B                        330 _inputsFace:
                                    331 ;Template/states/templateFaceMicrogame.c:157: if (curJoypad & J_LEFT && !(prevJoypad & J_LEFT))
      00015B FAr00r00               332 	ld	a, (#_curJoypad)
      00015E 21r00r00               333 	ld	hl, #_prevJoypad
      000161 4E                     334 	ld	c, (hl)
      000162 CB 4F                  335 	bit	1, a
      000164 28 14                  336 	jr	Z, 00109$
      000166 CB 49                  337 	bit	1, c
      000168 20 10                  338 	jr	NZ, 00109$
                                    339 ;Template/states/templateFaceMicrogame.c:160: if (m-- == 0U)
      00016A 21r00r00               340 	ld	hl, #_m
      00016D 4E                     341 	ld	c, (hl)
      00016E 35                     342 	dec	(hl)
      00016F 79                     343 	ld	a, c
      000170 B7                     344 	or	a, a
      000171 20 02                  345 	jr	NZ, 00102$
                                    346 ;Template/states/templateFaceMicrogame.c:161: m = 4U;
      000173 36 04                  347 	ld	(hl), #0x04
      000175                        348 00102$:
                                    349 ;Template/states/templateFaceMicrogame.c:162: updateCursorLocation();
      000175 CDrA4r02               350 	call	_updateCursorLocation
      000178 18 18                  351 	jr	00110$
      00017A                        352 00109$:
                                    353 ;Template/states/templateFaceMicrogame.c:164: else if (curJoypad & J_RIGHT && !(prevJoypad & J_RIGHT))
      00017A 0F                     354 	rrca
      00017B 30 15                  355 	jr	NC, 00110$
      00017D CB 41                  356 	bit	0, c
      00017F 20 11                  357 	jr	NZ, 00110$
                                    358 ;Template/states/templateFaceMicrogame.c:167: if (++m == 5U)
      000181 21r00r00               359 	ld	hl, #_m
      000184 34                     360 	inc	(hl)
      000185 7E                     361 	ld	a, (hl)
      000186 D6 05                  362 	sub	a, #0x05
      000188 20 05                  363 	jr	NZ, 00104$
                                    364 ;Template/states/templateFaceMicrogame.c:168: m = 0U;
      00018A 21r00r00               365 	ld	hl, #_m
      00018D 36 00                  366 	ld	(hl), #0x00
      00018F                        367 00104$:
                                    368 ;Template/states/templateFaceMicrogame.c:169: updateCursorLocation();
      00018F CDrA4r02               369 	call	_updateCursorLocation
      000192                        370 00110$:
                                    371 ;Template/states/templateFaceMicrogame.c:157: if (curJoypad & J_LEFT && !(prevJoypad & J_LEFT))
      000192 FAr00r00               372 	ld	a, (#_curJoypad)
      000195 21r00r00               373 	ld	hl, #_prevJoypad
      000198 4E                     374 	ld	c, (hl)
                                    375 ;Template/states/templateFaceMicrogame.c:172: if (curJoypad & J_UP && !(prevJoypad & J_UP))
      000199 CB 57                  376 	bit	2, a
      00019B 28 14                  377 	jr	Z, 00120$
      00019D CB 51                  378 	bit	2, c
      00019F 20 10                  379 	jr	NZ, 00120$
                                    380 ;Template/states/templateFaceMicrogame.c:175: if (n-- == 0U)
      0001A1 21r00r00               381 	ld	hl, #_n
      0001A4 4E                     382 	ld	c, (hl)
      0001A5 35                     383 	dec	(hl)
      0001A6 79                     384 	ld	a, c
      0001A7 B7                     385 	or	a, a
      0001A8 20 02                  386 	jr	NZ, 00113$
                                    387 ;Template/states/templateFaceMicrogame.c:176: n = 3U;
      0001AA 36 03                  388 	ld	(hl), #0x03
      0001AC                        389 00113$:
                                    390 ;Template/states/templateFaceMicrogame.c:177: updateCursorLocation();
      0001AC CDrA4r02               391 	call	_updateCursorLocation
      0001AF 18 19                  392 	jr	00121$
      0001B1                        393 00120$:
                                    394 ;Template/states/templateFaceMicrogame.c:179: else if (curJoypad & J_DOWN && !(prevJoypad & J_DOWN))
      0001B1 CB 5F                  395 	bit	3, a
      0001B3 28 15                  396 	jr	Z, 00121$
      0001B5 CB 59                  397 	bit	3, c
      0001B7 20 11                  398 	jr	NZ, 00121$
                                    399 ;Template/states/templateFaceMicrogame.c:182: if (++n == 4U)
      0001B9 21r00r00               400 	ld	hl, #_n
      0001BC 34                     401 	inc	(hl)
      0001BD 7E                     402 	ld	a, (hl)
      0001BE D6 04                  403 	sub	a, #0x04
      0001C0 20 05                  404 	jr	NZ, 00115$
                                    405 ;Template/states/templateFaceMicrogame.c:183: n = 0U;
      0001C2 21r00r00               406 	ld	hl, #_n
      0001C5 36 00                  407 	ld	(hl), #0x00
      0001C7                        408 00115$:
                                    409 ;Template/states/templateFaceMicrogame.c:184: updateCursorLocation();
      0001C7 CDrA4r02               410 	call	_updateCursorLocation
      0001CA                        411 00121$:
                                    412 ;Template/states/templateFaceMicrogame.c:187: if (curJoypad & J_A && !(prevJoypad & J_A))
      0001CA FAr00r00               413 	ld	a, (#_curJoypad)
      0001CD CB 67                  414 	bit	4, a
      0001CF C8                     415 	ret	Z
      0001D0 FAr00r00               416 	ld	a, (#_prevJoypad)
      0001D3 CB 67                  417 	bit	4, a
      0001D5 C0                     418 	ret	NZ
                                    419 ;Template/states/templateFaceMicrogame.c:189: if (facesGrid[n][m] == HAPPY)
      0001D6 21r00r00               420 	ld	hl, #_n
      0001D9 4E                     421 	ld	c, (hl)
      0001DA 06 00                  422 	ld	b, #0x00
      0001DC 69                     423 	ld	l, c
      0001DD 60                     424 	ld	h, b
      0001DE 29                     425 	add	hl, hl
      0001DF 29                     426 	add	hl, hl
      0001E0 09                     427 	add	hl, bc
      0001E1 01r00r00               428 	ld	bc,#_facesGrid
      0001E4 09                     429 	add	hl,bc
      0001E5 4D                     430 	ld	c, l
      0001E6 44                     431 	ld	b, h
                                    432 ;Template/states/templateFaceMicrogame.c:160: if (m-- == 0U)
      0001E7 21r00r00               433 	ld	hl, #_m
      0001EA 6E                     434 	ld	l, (hl)
                                    435 ;	spillPairReg hl
                                    436 ;	spillPairReg hl
                                    437 ;Template/states/templateFaceMicrogame.c:189: if (facesGrid[n][m] == HAPPY)
      0001EB 26 00                  438 	ld	h, #0x00
      0001ED 09                     439 	add	hl, bc
      0001EE 7E                     440 	ld	a, (hl)
      0001EF B7                     441 	or	a, a
      0001F0 20 61                  442 	jr	NZ, 00128$
                                    443 ;Template/states/templateFaceMicrogame.c:191: mgStatus = LOST;
      0001F2 21r00r00               444 	ld	hl, #_mgStatus
      0001F5 36 03                  445 	ld	(hl), #0x03
                                    446 ;Template/states/templateFaceMicrogame.c:195: for (i = 0U; i != 5U; ++i)
      0001F7 21r00r00               447 	ld	hl, #_i
      0001FA 36 00                  448 	ld	(hl), #0x00
      0001FC                        449 00135$:
                                    450 ;Template/states/templateFaceMicrogame.c:197: for (j = 0U; j != 4U; ++j)
      0001FC 21r00r00               451 	ld	hl, #_j
      0001FF 36 00                  452 	ld	(hl), #0x00
      000201                        453 00133$:
                                    454 ;Template/states/templateFaceMicrogame.c:199: facesGrid[j][i] = SAD;
      000201 21r00r00               455 	ld	hl, #_j
      000204 4E                     456 	ld	c, (hl)
      000205 06 00                  457 	ld	b, #0x00
      000207 69                     458 	ld	l, c
      000208 60                     459 	ld	h, b
      000209 29                     460 	add	hl, hl
      00020A 29                     461 	add	hl, hl
      00020B 09                     462 	add	hl, bc
      00020C 01r00r00               463 	ld	bc,#_facesGrid
      00020F 09                     464 	add	hl,bc
      000210 4D                     465 	ld	c, l
      000211 44                     466 	ld	b, h
      000212 21r00r00               467 	ld	hl, #_i
      000215 6E                     468 	ld	l, (hl)
                                    469 ;	spillPairReg hl
                                    470 ;	spillPairReg hl
      000216 26 00                  471 	ld	h, #0x00
      000218 09                     472 	add	hl, bc
      000219 36 01                  473 	ld	(hl), #0x01
                                    474 ;Template/states/templateFaceMicrogame.c:200: set_bkg_tiles(facesXAnchor + (i * 3U), facesYAnchor + (j * 3U), 2U, 2U, templateFace2Map);
      00021B FAr00r00               475 	ld	a, (#_j)
      00021E 4F                     476 	ld	c, a
      00021F 87                     477 	add	a, a
      000220 81                     478 	add	a, c
      000221 C6 03                  479 	add	a, #0x03
      000223 47                     480 	ld	b, a
      000224 21r00r00               481 	ld	hl, #_i
      000227 7E                     482 	ld	a, (hl)
      000228 5F                     483 	ld	e, a
      000229 87                     484 	add	a, a
      00022A 83                     485 	add	a, e
      00022B C6 03                  486 	add	a, #0x03
      00022D 11r00r00               487 	ld	de, #_templateFace2Map
      000230 D5                     488 	push	de
      000231 26 02                  489 	ld	h, #0x02
                                    490 ;	spillPairReg hl
                                    491 ;	spillPairReg hl
      000233 E5                     492 	push	hl
      000234 33                     493 	inc	sp
      000235 26 02                  494 	ld	h, #0x02
                                    495 ;	spillPairReg hl
                                    496 ;	spillPairReg hl
      000237 68                     497 	ld	l, b
      000238 E5                     498 	push	hl
      000239 F5                     499 	push	af
      00023A 33                     500 	inc	sp
      00023B CDr00r00               501 	call	_set_bkg_tiles
      00023E E8 06                  502 	add	sp, #6
                                    503 ;Template/states/templateFaceMicrogame.c:197: for (j = 0U; j != 4U; ++j)
      000240 21r00r00               504 	ld	hl, #_j
      000243 34                     505 	inc	(hl)
      000244 7E                     506 	ld	a, (hl)
      000245 D6 04                  507 	sub	a, #0x04
      000247 20 B8                  508 	jr	NZ, 00133$
                                    509 ;Template/states/templateFaceMicrogame.c:195: for (i = 0U; i != 5U; ++i)
      000249 21r00r00               510 	ld	hl, #_i
      00024C 34                     511 	inc	(hl)
      00024D 7E                     512 	ld	a, (hl)
      00024E D6 05                  513 	sub	a, #0x05
      000250 C8                     514 	ret	Z
      000251 18 A9                  515 	jr	00135$
      000253                        516 00128$:
                                    517 ;Template/states/templateFaceMicrogame.c:206: facesGrid[n][m] = HAPPY;
      000253 36 00                  518 	ld	(hl), #0x00
                                    519 ;Template/states/templateFaceMicrogame.c:207: set_bkg_tiles(facesXAnchor + (m * 3U), facesYAnchor + (n * 3U), 2U, 2U, templateFace1Map);
      000255 FAr00r00               520 	ld	a, (#_n)
      000258 4F                     521 	ld	c, a
      000259 87                     522 	add	a, a
      00025A 81                     523 	add	a, c
      00025B C6 03                  524 	add	a, #0x03
      00025D 47                     525 	ld	b, a
      00025E 21r00r00               526 	ld	hl, #_m
      000261 7E                     527 	ld	a, (hl)
      000262 5F                     528 	ld	e, a
      000263 87                     529 	add	a, a
      000264 83                     530 	add	a, e
      000265 C6 03                  531 	add	a, #0x03
      000267 11r00r00               532 	ld	de, #_templateFace1Map
      00026A D5                     533 	push	de
      00026B 26 02                  534 	ld	h, #0x02
                                    535 ;	spillPairReg hl
                                    536 ;	spillPairReg hl
      00026D E5                     537 	push	hl
      00026E 33                     538 	inc	sp
      00026F 26 02                  539 	ld	h, #0x02
                                    540 ;	spillPairReg hl
                                    541 ;	spillPairReg hl
      000271 68                     542 	ld	l, b
      000272 E5                     543 	push	hl
      000273 F5                     544 	push	af
      000274 33                     545 	inc	sp
      000275 CDr00r00               546 	call	_set_bkg_tiles
      000278 E8 06                  547 	add	sp, #6
                                    548 ;Template/states/templateFaceMicrogame.c:209: if (--sadCount == 0U)
      00027A 21r14r00               549 	ld	hl, #_sadCount
      00027D 35                     550 	dec	(hl)
      00027E C0                     551 	ret	NZ
                                    552 ;Template/states/templateFaceMicrogame.c:211: mgStatus = WON;
      00027F 21r00r00               553 	ld	hl, #_mgStatus
      000282 36 02                  554 	ld	(hl), #0x02
                                    555 ;Template/states/templateFaceMicrogame.c:216: }
      000284 C9                     556 	ret
                                    557 ;Template/states/templateFaceMicrogame.c:223: static void animateCursor()
                                    558 ;	---------------------------------
                                    559 ; Function animateCursor
                                    560 ; ---------------------------------
      000285                        561 _animateCursor:
                                    562 ;Template/states/templateFaceMicrogame.c:225: animFrame = (animTick >> 4U) % 4U;
      000285 FAr00r00               563 	ld	a, (#_animTick)
      000288 CB 37                  564 	swap	a
      00028A E6 03                  565 	and	a, #0x3
                                    566 ;	spillPairReg hl
                                    567 ;	spillPairReg hl
      00028C EAr00r00               568 	ld	(_animFrame), a
                                    569 ;Template/states/templateFaceMicrogame.c:226: if (animFrame == 3U)
      00028F FAr00r00               570 	ld	a, (#_animFrame)
      000292 D6 03                  571 	sub	a, #0x03
      000294 20 05                  572 	jr	NZ, 00102$
                                    573 ;Template/states/templateFaceMicrogame.c:227: animFrame = 1U;  // We want the pattern to be 0, 1, 2, 1, ad infinitum
      000296 21r00r00               574 	ld	hl, #_animFrame
      000299 36 01                  575 	ld	(hl), #0x01
      00029B                        576 00102$:
                                    577 ;Template/states/templateFaceMicrogame.c:230: set_sprite_tile(0U, animFrame);
      00029B 21r00r00               578 	ld	hl, #_animFrame
      00029E 4E                     579 	ld	c, (hl)
                                    580 ;C:/gbdk/include/gb/gb.h:1447: shadow_OAM[nb].tile=tile;
      00029F 21r02r00               581 	ld	hl, #(_shadow_OAM + 2)
      0002A2 71                     582 	ld	(hl), c
                                    583 ;Template/states/templateFaceMicrogame.c:230: set_sprite_tile(0U, animFrame);
                                    584 ;Template/states/templateFaceMicrogame.c:231: }
      0002A3 C9                     585 	ret
                                    586 ;Template/states/templateFaceMicrogame.c:233: static void updateCursorLocation()
                                    587 ;	---------------------------------
                                    588 ; Function updateCursorLocation
                                    589 ; ---------------------------------
      0002A4                        590 _updateCursorLocation:
                                    591 ;Template/states/templateFaceMicrogame.c:238: i = ((facesXAnchor + (m * 3U)) << 3U) + 12U;
      0002A4 FAr00r00               592 	ld	a, (#_m)
      0002A7 4F                     593 	ld	c, a
      0002A8 87                     594 	add	a, a
      0002A9 81                     595 	add	a, c
      0002AA C6 03                  596 	add	a, #0x03
      0002AC 87                     597 	add	a, a
      0002AD 87                     598 	add	a, a
      0002AE 87                     599 	add	a, a
      0002AF C6 0C                  600 	add	a, #0x0c
      0002B1 EAr00r00               601 	ld	(#_i),a
                                    602 ;Template/states/templateFaceMicrogame.c:239: j = ((facesYAnchor + (n * 3U)) << 3U) + 9U;
      0002B4 FAr00r00               603 	ld	a, (#_n)
      0002B7 4F                     604 	ld	c, a
      0002B8 87                     605 	add	a, a
      0002B9 81                     606 	add	a, c
      0002BA C6 03                  607 	add	a, #0x03
      0002BC 87                     608 	add	a, a
      0002BD 87                     609 	add	a, a
      0002BE 87                     610 	add	a, a
      0002BF C6 09                  611 	add	a, #0x09
      0002C1 21r00r00               612 	ld	hl, #_j
      0002C4 77                     613 	ld	(hl), a
                                    614 ;Template/states/templateFaceMicrogame.c:241: move_sprite(0U, i, j);
      0002C5 46                     615 	ld	b, (hl)
      0002C6 21r00r00               616 	ld	hl, #_i
      0002C9 4E                     617 	ld	c, (hl)
                                    618 ;C:/gbdk/include/gb/gb.h:1520: OAM_item_t * itm = &shadow_OAM[nb];
      0002CA 21r00r00               619 	ld	hl, #_shadow_OAM
                                    620 ;C:/gbdk/include/gb/gb.h:1521: itm->y=y, itm->x=x;
      0002CD 78                     621 	ld	a, b
      0002CE 22                     622 	ld	(hl+), a
      0002CF 71                     623 	ld	(hl), c
                                    624 ;Template/states/templateFaceMicrogame.c:241: move_sprite(0U, i, j);
                                    625 ;Template/states/templateFaceMicrogame.c:242: }
      0002D0 C9                     626 	ret
                                    627 	.area _CODE_1
                                    628 	.area _INITIALIZER
                                    629 	.area _CABS (ABS)
